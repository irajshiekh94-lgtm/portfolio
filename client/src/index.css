@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 26 10% 97%;

  --foreground: 0 0% 8%;

  --border: 26 8% 90%;

  --card: 26 12% 95%;

  --card-foreground: 0 0% 8%;

  --card-border: 26 8% 88%;

  --sidebar: 26 15% 93%;

  --sidebar-foreground: 0 0% 8%;

  --sidebar-border: 26 8% 85%;

  --sidebar-primary: 217 91% 60%;

  --sidebar-primary-foreground: 210 40% 98%;

  --sidebar-accent: 26 8% 90%;

  --sidebar-accent-foreground: 0 0% 8%;

  --sidebar-ring: 217 91% 60%;

  --popover: 26 15% 92%;

  --popover-foreground: 0 0% 8%;

  --popover-border: 26 8% 82%;

  --primary: 217 91% 60%;

  --primary-foreground: 210 40% 98%;

  --secondary: 26 8% 88%;

  --secondary-foreground: 0 0% 8%;

  --muted: 26 8% 90%;

  --muted-foreground: 0 0% 45%;

  --accent: 26 12% 92%;

  --accent-foreground: 0 0% 8%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 210 40% 98%;

  --input: 210 18% 75%;
  --ring: 217 91% 60%;
  --chart-1: 217 91% 60%;
  --chart-2: 162 89% 52%;
  --chart-3: 47 96% 53%;
  --chart-4: 280 87% 47%;
  --chart-5: 14 91% 57%;

  --font-sans: Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: JetBrains Mono, Menlo, Monaco, Consolas, monospace;
  --font-handwriting: Caveat, "Shadows Into Light", cursive;
  --font-script: "Great Vibes", "Dancing Script", cursive;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 1px 2px 0px hsl(210 40% 12% / 0.04);
  --shadow-xs: 0px 1px 2px 0px hsl(210 40% 12% / 0.05);
  --shadow-sm: 0px 1px 3px 0px hsl(210 40% 12% / 0.1), 0px 1px 2px -1px hsl(210 40% 12% / 0.1);
  --shadow: 0px 1px 3px 0px hsl(210 40% 12% / 0.1), 0px 1px 2px -1px hsl(210 40% 12% / 0.1);
  --shadow-md: 0px 4px 6px -1px hsl(210 40% 12% / 0.1), 0px 2px 4px -2px hsl(210 40% 12% / 0.1);
  --shadow-lg: 0px 10px 15px -3px hsl(210 40% 12% / 0.1), 0px 4px 6px -4px hsl(210 40% 12% / 0.1);
  --shadow-xl: 0px 20px 25px -5px hsl(210 40% 12% / 0.1), 0px 8px 10px -6px hsl(210 40% 12% / 0.1);
  --shadow-2xl: 0px 25px 50px -12px hsl(210 40% 12% / 0.25);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 210 10% 8%;

  --foreground: 32 6% 94%;

  --border: 210 10% 18%;

  --card: 210 10% 10%;

  --card-foreground: 32 6% 94%;

  --card-border: 210 10% 20%;

  --sidebar: 210 10% 12%;

  --sidebar-foreground: 32 6% 94%;

  --sidebar-border: 210 10% 22%;

  --sidebar-primary: 217 91% 60%;

  --sidebar-primary-foreground: 210 40% 98%;

  --sidebar-accent: 210 10% 16%;

  --sidebar-accent-foreground: 32 6% 94%;

  --sidebar-ring: 217 91% 60%;

  --popover: 210 10% 14%;

  --popover-foreground: 32 6% 94%;

  --popover-border: 210 10% 24%;

  --primary: 217 91% 60%;

  --primary-foreground: 210 40% 98%;

  --secondary: 210 10% 18%;

  --secondary-foreground: 32 6% 94%;

  --muted: 210 10% 16%;

  --muted-foreground: 210 6% 64%;

  --accent: 210 12% 18%;

  --accent-foreground: 32 6% 94%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 210 40% 98%;

  --input: 210 18% 32%;
  --ring: 217 91% 60%;
  --chart-1: 217 91% 70%;
  --chart-2: 162 89% 62%;
  --chart-3: 47 96% 63%;
  --chart-4: 280 87% 67%;
  --chart-5: 14 91% 67%;

  --shadow-2xs: 0px 1px 2px 0px hsl(210 40% 2% / 0.5);
  --shadow-xs: 0px 1px 2px 0px hsl(210 40% 2% / 0.6);
  --shadow-sm: 0px 1px 3px 0px hsl(210 40% 2% / 0.7), 0px 1px 2px -1px hsl(210 40% 2% / 0.7);
  --shadow: 0px 1px 3px 0px hsl(210 40% 2% / 0.7), 0px 1px 2px -1px hsl(210 40% 2% / 0.7);
  --shadow-md: 0px 4px 6px -1px hsl(210 40% 2% / 0.8), 0px 2px 4px -2px hsl(210 40% 2% / 0.8);
  --shadow-lg: 0px 10px 15px -3px hsl(210 40% 2% / 0.8), 0px 4px 6px -4px hsl(210 40% 2% / 0.8);
  --shadow-xl: 0px 20px 25px -5px hsl(210 40% 2% / 0.8), 0px 8px 10px -6px hsl(210 40% 2% / 0.8);
  --shadow-2xl: 0px 25px 50px -12px hsl(210 40% 2% / 0.9);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Portfolio hero animations */
  @media (prefers-reduced-motion: no-preference) {
    @keyframes fade-up {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes fade-in {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    @keyframes fade-in-right {
      from {
        opacity: 0;
        transform: translateX(20px);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    @keyframes float {
      0%, 100% { transform: translateY(0px); }
      50% { transform: translateY(-20px); }
    }

    @keyframes pulse-glow {
      0%, 100% { 
        opacity: 0.6;
        transform: scale(1);
      }
      50% { 
        opacity: 1;
        transform: scale(1.05);
      }
    }

    @keyframes gradient-shift {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    @keyframes bounce-in {
      0% {
        opacity: 0;
        transform: scale(0.3) translateY(100px);
      }
      50% {
        opacity: 1;
        transform: scale(1.05) translateY(-10px);
      }
      70% {
        transform: scale(0.95) translateY(5px);
      }
      100% {
        opacity: 1;
        transform: scale(1) translateY(0);
      }
    }

    @keyframes slide-in-left {
      from {
        opacity: 0;
        transform: translateX(-50px);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    @keyframes typewriter {
      from { width: 0; }
      to { width: 100%; }
    }

    @keyframes blink-cursor {
      from, to { border-color: transparent; }
      50% { border-color: #64748b; }
    }

    .animate-fade-up {
      animation: fade-up 0.8s ease-out forwards;
    }

    .animate-fade-in {
      animation: fade-in 0.6s ease-out forwards;
    }

    .animate-fade-in-right {
      animation: fade-in-right 0.7s ease-out forwards;
    }

    .animate-bounce-in {
      animation: bounce-in 1.2s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
    }

    .animate-slide-in-left {
      animation: slide-in-left 0.8s ease-out forwards;
    }

    .animate-float {
      animation: float 6s ease-in-out infinite;
    }

    .animate-pulse-glow {
      animation: pulse-glow 3s ease-in-out infinite;
    }

    .animate-gradient-shift {
      background-size: 400% 400%;
      animation: gradient-shift 8s ease infinite;
    }

    .typewriter-effect {
      overflow: hidden;
      border-right: 3px solid #64748b;
      white-space: nowrap;
      animation: 
        typewriter 2s steps(40, end),
        blink-cursor 0.75s step-end infinite;
    }

    /* Staggered letter animations */
    .letter-animate {
      display: inline-block;
      opacity: 0;
      animation: fade-up 0.6s ease-out forwards;
    }

    .letter-animate:nth-child(1) { animation-delay: 0.1s; }
    .letter-animate:nth-child(2) { animation-delay: 0.15s; }
    .letter-animate:nth-child(3) { animation-delay: 0.2s; }
    .letter-animate:nth-child(4) { animation-delay: 0.25s; }
    .letter-animate:nth-child(5) { animation-delay: 0.3s; }
    .letter-animate:nth-child(6) { animation-delay: 0.35s; }
    .letter-animate:nth-child(7) { animation-delay: 0.4s; }
    .letter-animate:nth-child(8) { animation-delay: 0.45s; }
    .letter-animate:nth-child(9) { animation-delay: 0.5s; }
  }

  /* Custom font utilities */
  .font-handwriting {
    font-family: var(--font-handwriting);
  }

  .font-script {
    font-family: var(--font-script);
  }
}